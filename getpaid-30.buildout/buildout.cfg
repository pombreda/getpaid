[buildout]
parts =
    plone
    zope2
    productdistros
    instance
    zopepy
    test
    test-recorder

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

# Add additional eggs here
# elementtree is required by Plone
eggs =
    simplejson 
    elementtree
    
# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =
    src/zc.table
    src/zc.resourcelibrary
    src/five.intid
    src/yoma.batching
    src/ore.viewlet
    src/ore.xd
    src/hurry.workflow
    src/getpaid.core
    src/getpaid.io
    src/getpaid.nullpayment
#    src/gchecky
#    src/getpaid.googlecheckout
#    src/getpaid.authorizedotnet
#    src/zc.authorizedotnet
#    src/getpaid.paypal
    recipes

[plone]
recipe = plone.recipe.plone>=3.0,<3.1dev

[zope2]
recipe = plone.recipe.zope2install
url = ${plone:zope2-url}

[test-recorder]
recipe = infrae.subversion
urls =
    svn://svn.zope.org/repos/main/zope.testrecorder/trunk/src/zope/testrecorder testrecorder

[test]
recipe = zc.recipe.testrunner
eggs = ${buildout:eggs}
       getpaid.core
       getpaid.io
       getpaid.nullpayment 
       hurry.workflow
       ore.xd
extra-paths = ${zope2:location}/lib/python

# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL, 
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.
[productdistros]
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages = 

[instance]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = on

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} ${plone:eggs} my.package
eggs =
    ${buildout:eggs}
    ${plone:eggs}
    zc.resourcelibrary
    zc.table
    five.intid
    yoma.batching
    ore.viewlet
    ore.xd
    hurry.workflow
    getpaid.core
    getpaid.nullpayment
    getpaid.io
#    zc.authorizedotnet
#    getpaid.authorizedotnet
#    gchecky
#    getpaid.googlecheckout
#    getpaid.paypal

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml = 

products =
    ${buildout:directory}/develop-products
    ${productdistros:location}
    ${plone:products}
    ${buildout:directory}/develop-debug
    ${buildout:directory}/parts/test-recorder


[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python
scripts = zopepy

[cleanup]
recipe = recipes:cleanup
