==============================================================================
Doctest generated Mon Oct 15 2007 12:36:37 GMT+0200 (CEST)
by cjj
==============================================================================

Create the browser object we'll be using.

    >>> from Products.Five.testbrowser import Browser
    >>> browser = Browser()
    >>> browser.handleErrors = False
    >>> browser.open(portal.absolute_url())
    >>> 'Welcome to Plone' in browser.contents
    True

Testing checkout process for authenticated user (in this case, admin)

     >>> membership = self.portal.portal_membership
     >>> membership.addMember('testmanager', 'secret',
     ...		     ['Member', 'Manager'], [])

     >>> browser.getLink('Log in').click()
     >>> browser.getControl('Login Name').value = 'testmanager'
     >>> browser.getControl('Password').value = 'secret'
     >>> browser.getControl('Log in').click()

     >>> self.portal.portal_quickinstaller.installProduct('PloneGetPaid')
     'Installing Dependencies\n'
     >>> browser.getLink('Home').click()
     
Testing the setup aspects of GetPaid. Setting required settings. 

    >>> browser.getLink('Site Setup').click()
    >>> browser.getLink('GetPaid').click()
    >>> browser.getLink('Site Profile').click()
    >>> browser.getControl('Contact Email').value = 'info@plonegetpaid.com'
    >>> browser.getControl( name="form.store_name").value = 'Test this fake company'
    >>> browser.getControl('Contact Country').displayValue = ['UNITED STATES']
    >>> browser.getControl('Apply').click()
    >>> browser.getLink('GetPaid').click()
    >>> browser.getLink('Content Types').click()
    >>> browser.getLink('GetPaid').click()
    >>> browser.getLink('Shipping Options').click()
    >>> browser.getControl(name='form.shipping_method').displayValue = ['Flat Rate Shipping']
    >>> browser.getControl('Apply').click()
    >>> browser.getLink('GetPaid').click()
    >>> browser.getLink('Payment Options').click()
    >>> browser.getControl(name = 'form.payment_processor').displayValue = ['Testing Processor']
    >>> browser.getControl(name = 'form.allow_anonymous_checkout.used').value = 'on'
    >>> browser.getControl('Apply').click()
    >>> browser.getLink('GetPaid').click()
    >>> browser.getLink('Payment Processor Settings').click()
    >>> browser.getControl(name="form.allow_authorization").displayValue = ['allow_authorization']
    >>> browser.getControl(name="form.allow_capture").displayValue = ['allow_capture']
    >>> browser.getControl(name="form.allow_refunds").displayValue = ['allow_refund']    
    >>> browser.getControl('Apply').click()
    >>> browser.getLink('GetPaid').click()
    >>> browser.getLink('Email Notifications').click()
    >>> browser.getControl(name='form.merchant_email_notification').displayValue = ['Do not send merchant email notification of a completed transaction']
    >>> browser.getControl(name='form.customer_email_notification').displayValue = ['Do not send customer email notification of a completed transaction']
    >>> browser.getControl('Apply').click()
    >>> browser.getLink('GetPaid').click()
    >>> browser.getLink('Legal Disclaimers').click()
    >>> browser.getControl(name='form.disclaimer').value = 'Test disclaimer'
    >>> browser.getControl(name='form.privacy_policy').value = 'Test privacy policy'
    >>> browser.getControl('Apply').click()
    >>> browser.getLink('GetPaid').click() 
    >>> 'Test this fake company' in browser.contents
    True


Here we are setting the buyable types for use in the following tests
  
    >>> from Products.PloneGetPaid.interfaces import IGetPaidManagementOptions
    >>> options = IGetPaidManagementOptions(self.portal)
    >>> options.buyable_types = ['Document']
    >>> options.donate_types = ['Document']
    >>> options.shippable_types = ['Document']


Check to make sure the settings we put in Site Profile appear on this page. 

     >>> browser.getLink('Home').click()

Setup Donatable

    >>> browser.getLink('Make this a Donation').click()
    >>> browser.getControl(name='form.donation_text').value = 'Test donation description'
    >>> browser.getControl(name='form.price').value = '11.00'
    >>> browser.getControl('Activate').click()
     
Test donation checkout, which should go directly to checkout screen from the portlet. 

    >>> browser.getLink('Donate!').click()
    >>> browser.getControl('Your Name').value = 'Test'
    >>> browser.getControl('Phone Number').value = '1234567'
    >>> browser.getControl('Phone Number').value = '12345678'
    >>> browser.getControl(name='form.email').value = 'test@test.com'
    >>> browser.getControl(name='form.bill_first_line').value = 'Test'
    >>> browser.getControl(name='form.bill_city').value = 'Test'
    >>> browser.getControl(name='form.bill_state').value = 'US-HI'
    >>> browser.getControl(name='form.bill_postal_code').value = '12345'
    >>> browser.getControl(name='form.ship_first_line').value = 'Test'
    >>> browser.getControl(name='form.ship_city').value = 'Test'
    >>> browser.getControl(name='form.ship_state').value = 'US-HI'
    >>> browser.getControl(name='form.ship_postal_code').value = '12345'

Test popup for privacy policy

    >>> browser.getLink('Privacy Policy').click()

Test popup of disclaimer

    >>> browser.getLink('Disclaimer').click()
    >>> browser.getControl('Continue').click()
    >>> browser.getControl('Card Holder Name').value = 'Test Cardholder'
    >>> browser.getControl(name='form.cc_expiration_month').value = '02'
    >>> browser.getControl(name='form.cc_expiration_year').value = '2009'

Use real test credit card numbers, available from http://developer.authorize.net/faqs/#7429

    >>> browser.getControl('Credit Card Verfication Number').value = '1234'
    >>> browser.getControl('Credit Card Number').value = '4007000000027'

Retest privacy and disclaimer for this screen

    >>> browser.getLink('Privacy Policy').click()
    >>> browser.getLink('Disclaimer').click()
    >>> browser.getControl('Make Payment').click()

Donation checkout completed. Now check order

    >>> browser.getLink('here').click()

Verify order was for what we checked out.

    >>> browser.open('http://localhost/pgp/@@getpaid-order/1072548714')
    >>> 'Welcome to Plone' in browser.contents
    True
    >>> 'CHARGED' in browser.contents
    True

This completes test of donation checkout. Verified that item was listed on order for user. 

    >>> browser.open('http://localhost/pgp')

Now test add to cart and checkout process. 

    >>> browser.getLink('Test image buyable').click()
    >>> browser.getLink('Add to Cart').click()
    >>> 'Test image buyable' in browser.contents
    True

Check contents of cart for item added

    >>> browser.getControl('Continue Shopping').click()
    >>> browser.getLink('Test news item').click()
    >>> 'Contains 1 Items' in browser.contents
    True

One item already in cart. Add another. 

    >>> browser.getLink('Add to Cart').click()
    >>> 'Test news item' in browser.contents
    True

Check that new item is in cart

    >>> browser.getControl('Checkout').click()
    >>> browser.getControl('Your Name').value = 'test'
    >>> browser.getControl('State').value = ('US-HI',)
    >>> browser.getControl('State').value = ('US-HI',)
    >>> browser.getControl('Continue').click()
    >>> browser.getControl(name='form.cc_expiration_month').value = '02'
    >>> browser.getControl(name='form.cc_expiration_year').value = '2009'
    >>> browser.getControl('Make Payment').click()
    >>> 'CHARGED' in browser.contents
    True

Check order

    >>> browser.getLink('here').click()
    >>> '739542411' in browser.contents
    True
    >>> browser.open('http://localhost/pgp/@@getpaid-order/739542411')
    >>> 'Test image buyable' in browser.contents
    True
    >>> 'Test news item' in browser.contents
    True
    >>> 'CHARGED' in browser.contents
    True

Finish verification


